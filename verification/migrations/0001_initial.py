# Generated by Django 3.0.7 on 2020-08-22 21:12

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sport', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2, 'minimum length should be greater than 2')])),
            ],
            options={
                'db_table': 'sport',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(default='None', max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2, 'minimum length should be greater than 2')])),
            ],
            options={
                'db_table': 'state',
            },
        ),
        migrations.CreateModel(
            name='UnionTerritory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Union_territory', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2, 'minimum length should be greater than 2')])),
            ],
            options={
                'db_table': 'unionterritories',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('age', models.PositiveIntegerField(default=0)),
                ('highest_qualification', models.CharField(default='none', max_length=256)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('sport', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='verification.Sport')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='verification.State')),
                ('union_territory', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='verification.UnionTerritory')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
